/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.records;


import com.aa.msw.gen.jooq.tables.SampleTable;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SampleTableRecord extends UpdatableRecordImpl<SampleTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sample_table.id</code>.
     */
    public SampleTableRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.sample_table.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.sample_table.stationid</code>.
     */
    public SampleTableRecord setStationid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.sample_table.stationid</code>.
     */
    public Integer getStationid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.sample_table.timestamp</code>.
     */
    public SampleTableRecord setTimestamp(OffsetDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.sample_table.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.sample_table.temperature</code>.
     */
    public SampleTableRecord setTemperature(Float value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.sample_table.temperature</code>.
     */
    public Float getTemperature() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>public.sample_table.flow</code>.
     */
    public SampleTableRecord setFlow(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.sample_table.flow</code>.
     */
    public Integer getFlow() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SampleTableRecord
     */
    public SampleTableRecord() {
        super(SampleTable.SAMPLE_TABLE);
    }

    /**
     * Create a detached, initialised SampleTableRecord
     */
    public SampleTableRecord(UUID id, Integer stationid, OffsetDateTime timestamp, Float temperature, Integer flow) {
        super(SampleTable.SAMPLE_TABLE);

        setId(id);
        setStationid(stationid);
        setTimestamp(timestamp);
        setTemperature(temperature);
        setFlow(flow);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SampleTableRecord
     */
    public SampleTableRecord(com.aa.msw.gen.jooq.tables.pojos.SampleTable value) {
        super(SampleTable.SAMPLE_TABLE);

        if (value != null) {
            setId(value.getId());
            setStationid(value.getStationid());
            setTimestamp(value.getTimestamp());
            setTemperature(value.getTemperature());
            setFlow(value.getFlow());
            resetChangedOnNotNull();
        }
    }
}
