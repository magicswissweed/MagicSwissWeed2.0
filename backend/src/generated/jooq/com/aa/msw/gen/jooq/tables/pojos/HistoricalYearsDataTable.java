/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class HistoricalYearsDataTable implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID dbId;
    private final Integer stationId;
    private final JSONB median;
    private final JSONB twentyFivePercentile;
    private final JSONB seventyFivePercentile;
    private final JSONB max;
    private final JSONB min;
    private final JSONB currentYear;

    public HistoricalYearsDataTable(HistoricalYearsDataTable value) {
        this.dbId = value.dbId;
        this.stationId = value.stationId;
        this.median = value.median;
        this.twentyFivePercentile = value.twentyFivePercentile;
        this.seventyFivePercentile = value.seventyFivePercentile;
        this.max = value.max;
        this.min = value.min;
        this.currentYear = value.currentYear;
    }

    public HistoricalYearsDataTable(
        UUID dbId,
        Integer stationId,
        JSONB median,
        JSONB twentyFivePercentile,
        JSONB seventyFivePercentile,
        JSONB max,
        JSONB min,
        JSONB currentYear
    ) {
        this.dbId = dbId;
        this.stationId = stationId;
        this.median = median;
        this.twentyFivePercentile = twentyFivePercentile;
        this.seventyFivePercentile = seventyFivePercentile;
        this.max = max;
        this.min = min;
        this.currentYear = currentYear;
    }

    /**
     * Getter for <code>public.historical_years_data_table.db_id</code>.
     */
    public UUID getDbId() {
        return this.dbId;
    }

    /**
     * Getter for <code>public.historical_years_data_table.station_id</code>.
     */
    public Integer getStationId() {
        return this.stationId;
    }

    /**
     * Getter for <code>public.historical_years_data_table.median</code>.
     */
    public JSONB getMedian() {
        return this.median;
    }

    /**
     * Getter for
     * <code>public.historical_years_data_table.twenty_five_percentile</code>.
     */
    public JSONB getTwentyFivePercentile() {
        return this.twentyFivePercentile;
    }

    /**
     * Getter for
     * <code>public.historical_years_data_table.seventy_five_percentile</code>.
     */
    public JSONB getSeventyFivePercentile() {
        return this.seventyFivePercentile;
    }

    /**
     * Getter for <code>public.historical_years_data_table.max</code>.
     */
    public JSONB getMax() {
        return this.max;
    }

    /**
     * Getter for <code>public.historical_years_data_table.min</code>.
     */
    public JSONB getMin() {
        return this.min;
    }

    /**
     * Getter for <code>public.historical_years_data_table.current_year</code>.
     */
    public JSONB getCurrentYear() {
        return this.currentYear;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final HistoricalYearsDataTable other = (HistoricalYearsDataTable) obj;
        if (this.dbId == null) {
            if (other.dbId != null)
                return false;
        }
        else if (!this.dbId.equals(other.dbId))
            return false;
        if (this.stationId == null) {
            if (other.stationId != null)
                return false;
        }
        else if (!this.stationId.equals(other.stationId))
            return false;
        if (this.median == null) {
            if (other.median != null)
                return false;
        }
        else if (!this.median.equals(other.median))
            return false;
        if (this.twentyFivePercentile == null) {
            if (other.twentyFivePercentile != null)
                return false;
        }
        else if (!this.twentyFivePercentile.equals(other.twentyFivePercentile))
            return false;
        if (this.seventyFivePercentile == null) {
            if (other.seventyFivePercentile != null)
                return false;
        }
        else if (!this.seventyFivePercentile.equals(other.seventyFivePercentile))
            return false;
        if (this.max == null) {
            if (other.max != null)
                return false;
        }
        else if (!this.max.equals(other.max))
            return false;
        if (this.min == null) {
            if (other.min != null)
                return false;
        }
        else if (!this.min.equals(other.min))
            return false;
        if (this.currentYear == null) {
            if (other.currentYear != null)
                return false;
        }
        else if (!this.currentYear.equals(other.currentYear))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.dbId == null) ? 0 : this.dbId.hashCode());
        result = prime * result + ((this.stationId == null) ? 0 : this.stationId.hashCode());
        result = prime * result + ((this.median == null) ? 0 : this.median.hashCode());
        result = prime * result + ((this.twentyFivePercentile == null) ? 0 : this.twentyFivePercentile.hashCode());
        result = prime * result + ((this.seventyFivePercentile == null) ? 0 : this.seventyFivePercentile.hashCode());
        result = prime * result + ((this.max == null) ? 0 : this.max.hashCode());
        result = prime * result + ((this.min == null) ? 0 : this.min.hashCode());
        result = prime * result + ((this.currentYear == null) ? 0 : this.currentYear.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("HistoricalYearsDataTable (");

        sb.append(dbId);
        sb.append(", ").append(stationId);
        sb.append(", ").append(median);
        sb.append(", ").append(twentyFivePercentile);
        sb.append(", ").append(seventyFivePercentile);
        sb.append(", ").append(max);
        sb.append(", ").append(min);
        sb.append(", ").append(currentYear);

        sb.append(")");
        return sb.toString();
    }
}
