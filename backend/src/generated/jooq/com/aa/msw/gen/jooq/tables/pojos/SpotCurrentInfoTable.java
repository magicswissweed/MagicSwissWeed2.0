/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.pojos;


import com.aa.msw.gen.jooq.enums.Flowstatus;

import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SpotCurrentInfoTable implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID spotId;
    private final Flowstatus currentflowstatus;

    public SpotCurrentInfoTable(SpotCurrentInfoTable value) {
        this.id = value.id;
        this.spotId = value.spotId;
        this.currentflowstatus = value.currentflowstatus;
    }

    public SpotCurrentInfoTable(
        UUID id,
        UUID spotId,
        Flowstatus currentflowstatus
    ) {
        this.id = id;
        this.spotId = spotId;
        this.currentflowstatus = currentflowstatus;
    }

    /**
     * Getter for <code>public.spot_current_info_table.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.spot_current_info_table.spot_id</code>.
     */
    public UUID getSpotId() {
        return this.spotId;
    }

    /**
     * Getter for <code>public.spot_current_info_table.currentflowstatus</code>.
     */
    public Flowstatus getCurrentflowstatus() {
        return this.currentflowstatus;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final SpotCurrentInfoTable other = (SpotCurrentInfoTable) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.spotId == null) {
            if (other.spotId != null)
                return false;
        }
        else if (!this.spotId.equals(other.spotId))
            return false;
        if (this.currentflowstatus == null) {
            if (other.currentflowstatus != null)
                return false;
        }
        else if (!this.currentflowstatus.equals(other.currentflowstatus))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.spotId == null) ? 0 : this.spotId.hashCode());
        result = prime * result + ((this.currentflowstatus == null) ? 0 : this.currentflowstatus.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("SpotCurrentInfoTable (");

        sb.append(id);
        sb.append(", ").append(spotId);
        sb.append(", ").append(currentflowstatus);

        sb.append(")");
        return sb.toString();
    }
}
