/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.daos;


import com.aa.msw.gen.jooq.tables.UserToSpotTable;
import com.aa.msw.gen.jooq.tables.records.UserToSpotTableRecord;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserToSpotTableDao extends DAOImpl<UserToSpotTableRecord, com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable, UUID> {

    /**
     * Create a new UserToSpotTableDao without any configuration
     */
    public UserToSpotTableDao() {
        super(UserToSpotTable.USER_TO_SPOT_TABLE, com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable.class);
    }

    /**
     * Create a new UserToSpotTableDao with an attached configuration
     */
    public UserToSpotTableDao(Configuration configuration) {
        super(UserToSpotTable.USER_TO_SPOT_TABLE, com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable.class, configuration);
    }

    @Override
    public UUID getId(com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchRangeOfId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserToSpotTable.USER_TO_SPOT_TABLE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchById(UUID... values) {
        return fetch(UserToSpotTable.USER_TO_SPOT_TABLE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable fetchOneById(UUID value) {
        return fetchOne(UserToSpotTable.USER_TO_SPOT_TABLE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchOptionalById(UUID value) {
        return fetchOptional(UserToSpotTable.USER_TO_SPOT_TABLE.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchRangeOfUserId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserToSpotTable.USER_TO_SPOT_TABLE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchByUserId(UUID... values) {
        return fetch(UserToSpotTable.USER_TO_SPOT_TABLE.USER_ID, values);
    }

    /**
     * Fetch records that have <code>spot_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchRangeOfSpotId(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(UserToSpotTable.USER_TO_SPOT_TABLE.SPOT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>spot_id IN (values)</code>
     */
    public List<com.aa.msw.gen.jooq.tables.pojos.UserToSpotTable> fetchBySpotId(UUID... values) {
        return fetch(UserToSpotTable.USER_TO_SPOT_TABLE.SPOT_ID, values);
    }
}
