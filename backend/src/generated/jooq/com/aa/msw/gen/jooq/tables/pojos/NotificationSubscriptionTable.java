/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationSubscriptionTable implements Serializable {

    private static final long serialVersionUID = 1L;

    private final UUID id;
    private final UUID userId;
    private final String subscriptionToken;

    public NotificationSubscriptionTable(NotificationSubscriptionTable value) {
        this.id = value.id;
        this.userId = value.userId;
        this.subscriptionToken = value.subscriptionToken;
    }

    public NotificationSubscriptionTable(
        UUID id,
        UUID userId,
        String subscriptionToken
    ) {
        this.id = id;
        this.userId = userId;
        this.subscriptionToken = subscriptionToken;
    }

    /**
     * Getter for <code>public.notification_subscription_table.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.notification_subscription_table.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Getter for
     * <code>public.notification_subscription_table.subscription_token</code>.
     */
    public String getSubscriptionToken() {
        return this.subscriptionToken;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotificationSubscriptionTable other = (NotificationSubscriptionTable) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.subscriptionToken == null) {
            if (other.subscriptionToken != null)
                return false;
        }
        else if (!this.subscriptionToken.equals(other.subscriptionToken))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.subscriptionToken == null) ? 0 : this.subscriptionToken.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotificationSubscriptionTable (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(subscriptionToken);

        sb.append(")");
        return sb.toString();
    }
}
