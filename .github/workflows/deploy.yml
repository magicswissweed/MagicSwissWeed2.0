name: Deploy via SSH

on:
  workflow_dispatch:
    inputs:
      docker_image_name:
        description: "The Docker image name to deploy - equals the git commit id on the master"
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_SERVICE_ACCOUNT }}

      - name: Docker configuration
        run: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev

      - name: üñ®Ô∏è Prepare Backend Docker Build
        run: |
          mv backend/build/libs/$(ls backend/build/libs | grep -v plain) backend/app.jar

      - name: üì¶ Check if Backend Docker image already exists
        id: image-check
        run: |
          IMAGE="$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_BACKEND/$GITHUB_SHA"
          echo "Checking for image: $IMAGE"

          EXISTS=$(gcloud artifacts docker images list "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_BACKEND" \
            --filter="version=$GITHUB_SHA" \
            --format="value(version)")

          if [[ "$EXISTS" == "$GITHUB_SHA" ]]; then
            echo "Image already exists. Skipping build and push."
            echo "skip_backend_build=true" >> $GITHUB_OUTPUT
          else
            echo "Image does not exist. Proceeding."
            echo "skip_backend_build=false" >> $GITHUB_OUTPUT
          fi

      - name: üê≥ Build Backend Docker Image
        if: steps.image-check.outputs.skip_backend_build == 'false'
        run: |
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_BACKEND/$GITHUB_SHA" \
            --build-arg JAR_FILE=app.jar \
            backend

      - name: üì¶ Check if Frontend Docker image already exists
        id: image-check
        run: |
          IMAGE="$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_FRONTEND/$GITHUB_SHA"
          echo "Checking for image: $IMAGE"

          EXISTS=$(gcloud artifacts docker images list "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_FRONTEND" \
            --filter="version=$GITHUB_SHA" \
            --format="value(version)")

          if [[ "$EXISTS" == "$GITHUB_SHA" ]]; then
            echo "Image already exists. Skipping build and push."
            echo "skip_frontend_build=true" >> $GITHUB_OUTPUT
          else
            echo "Image does not exist. Proceeding."
            echo "skip_frontend_build=false" >> $GITHUB_OUTPUT
          fi

      - name: üê≥ Build Frontend Docker Image
        if: steps.image-check.outputs.skip_frontend_build == 'false'
        run: |
          docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_FRONTEND/$GITHUB_SHA" \
          frontend

      - name: üöÄ Push Backend Image to GCP Artifact Registry
        if: github.ref == 'refs/heads/master'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_BACKEND/$GITHUB_SHA"

      - name: üöÄ Push Frontend Image to GCP Artifact Registry
        if: github.ref == 'refs/heads/master'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$GAR_REPOSITORY_FRONTEND/$GITHUB_SHA"

      - name: Run deployment script on remote server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_URL }}
          username: studi
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /opt/ponte-services/magicswissweed
            sudo ./deploy.sh ${{ github.event.inputs.docker_image_name }}
