/*
 * This file is generated by jOOQ.
 */
package com.aa.msw.gen.jooq.tables.records;


import com.aa.msw.gen.jooq.tables.ForecastTable;

import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ForecastTableRecord extends UpdatableRecordImpl<ForecastTableRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.forecast_table.id</code>.
     */
    public ForecastTableRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.forecast_table.stationid</code>.
     */
    public ForecastTableRecord setStationid(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.stationid</code>.
     */
    public Integer getStationid() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.forecast_table.measureddata</code>.
     */
    public ForecastTableRecord setMeasureddata(JSONB value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.measureddata</code>.
     */
    public JSONB getMeasureddata() {
        return (JSONB) get(2);
    }

    /**
     * Setter for <code>public.forecast_table.median</code>.
     */
    public ForecastTableRecord setMedian(JSONB value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.median</code>.
     */
    public JSONB getMedian() {
        return (JSONB) get(3);
    }

    /**
     * Setter for
     * <code>public.forecast_table.twentyfivetoseventyfivepercentile</code>.
     */
    public ForecastTableRecord setTwentyfivetoseventyfivepercentile(JSONB value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.forecast_table.twentyfivetoseventyfivepercentile</code>.
     */
    public JSONB getTwentyfivetoseventyfivepercentile() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.forecast_table.max</code>.
     */
    public ForecastTableRecord setMax(JSONB value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.max</code>.
     */
    public JSONB getMax() {
        return (JSONB) get(5);
    }

    /**
     * Setter for <code>public.forecast_table.min</code>.
     */
    public ForecastTableRecord setMin(JSONB value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.min</code>.
     */
    public JSONB getMin() {
        return (JSONB) get(6);
    }

    /**
     * Setter for <code>public.forecast_table.timestamp</code>.
     */
    public ForecastTableRecord setTimestamp(OffsetDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.forecast_table.timestamp</code>.
     */
    public OffsetDateTime getTimestamp() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForecastTableRecord
     */
    public ForecastTableRecord() {
        super(ForecastTable.FORECAST_TABLE);
    }

    /**
     * Create a detached, initialised ForecastTableRecord
     */
    public ForecastTableRecord(UUID id, Integer stationid, JSONB measureddata, JSONB median, JSONB twentyfivetoseventyfivepercentile, JSONB max, JSONB min, OffsetDateTime timestamp) {
        super(ForecastTable.FORECAST_TABLE);

        setId(id);
        setStationid(stationid);
        setMeasureddata(measureddata);
        setMedian(median);
        setTwentyfivetoseventyfivepercentile(twentyfivetoseventyfivepercentile);
        setMax(max);
        setMin(min);
        setTimestamp(timestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ForecastTableRecord
     */
    public ForecastTableRecord(com.aa.msw.gen.jooq.tables.pojos.ForecastTable value) {
        super(ForecastTable.FORECAST_TABLE);

        if (value != null) {
            setId(value.getId());
            setStationid(value.getStationid());
            setMeasureddata(value.getMeasureddata());
            setMedian(value.getMedian());
            setTwentyfivetoseventyfivepercentile(value.getTwentyfivetoseventyfivepercentile());
            setMax(value.getMax());
            setMin(value.getMin());
            setTimestamp(value.getTimestamp());
            resetChangedOnNotNull();
        }
    }
}
